scalar DateTime
scalar Json

type SuccessMessage {
  message: String
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  contacts: [Contact!]
}

type Contact {
  id: ID!
  isAccepted: Boolean
  users: [User!]!
  chat: [Message!]
}

type Message {
  id: ID!
  isRecieved: Boolean
  isRead: Boolean
  sent: DateTime
  text: String!
}

type Query {
  me: User
  users: [User!]
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String): AuthPayload!
  logout: SuccessMessage
  createContact(requestedId: ID!): Contact!
}
