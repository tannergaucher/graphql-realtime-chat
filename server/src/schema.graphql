scalar DateTime
scalar Json

type SuccessMessage {
  message: String
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  avatarUrl: String
  messages: [Message]
  isOnline: Boolean
}

type Message {
  id: ID!
  user: User
  message: String!
}

type Query {
  me: User
  users: [User!]
  messages: [Message!]
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String): AuthPayload!
  signout: SuccessMessage
  sendMessage(message: String!): Message
  updateAvatarUrl(avatarUrl: String!): User
  setUserOnline: User
  setUserOffline: User
}

type Subscription {
  messageSent: Message
}
